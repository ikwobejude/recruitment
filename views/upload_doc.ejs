<!DOCTYPE html>
<html>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"
  integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<style>
  * {
    box-sizing: border-box;
  }

  body {
    background-color: #f1f1f1;
  }

  #regForm {
    background-color: #ffffff;
    margin: 100px auto;
    font-family: Raleway;
    padding: 40px;
    width: 70%;
    min-width: 300px;
    height: 400px;
  }

  h1 {
    text-align: center;
  }

  input {
    padding: 10px;
    width: 100%;
    font-size: 17px;
    font-family: Raleway;
    border: 1px solid #aaaaaa;
  }

  /* Mark input boxes that gets an error on validation: */
  input.invalid {
    background-color: #ffdddd;
  }

  /* Hide all steps by default: */
  .tab {
    display: none;
  }

  button {
    background-color: #04AA6D;
    color: #ffffff;
    border: none;
    padding: 10px 20px;
    font-size: 17px;
    font-family: Raleway;
    cursor: pointer;
  }

  button:hover {
    opacity: 0.8;
  }

  #prevBtn {
    background-color: #bbbbbb;
  }

  /* Make circles that indicate the steps of the form: */
  .step {
    height: 15px;
    width: 15px;
    margin: 0 2px;
    background-color: #bbbbbb;
    border: none;
    border-radius: 50%;
    display: inline-block;
    opacity: 0.5;
  }

  .step.active {
    opacity: 1;
  }

  /* Mark the steps that are finished and valid: */
  .step.finish {
    background-color: #04AA6D;
  }
  
  /* spinner */
#cover-spin {
        position:fixed;
        width:100%;
        left:0;right:0;top:0;bottom:0;
        background-color: rgba(255,255,255,0.7);
        z-index:9999;
        display:none;
    }
    @-webkit-keyframes spin {
      from {
        -webkit-transform: rotate(0deg);
      }

      to {
        -webkit-transform: rotate(360deg);
      }
    }

    @keyframes spin {
      from {
        transform: rotate(0deg);
      }

      to {
        transform: rotate(360deg);
      }
    }

    #cover-spin::after {
      content: '';
      display: block;
      position: absolute;
      left: 48%;
      top: 40%;
      width: 40px;
      height: 40px;
      border-style: solid;
      border-color: black;
      border-top-color: transparent;
      border-width: 4px;
      border-radius: 50%;
      -webkit-animation: spin .8s linear infinite;
      animation: spin .8s linear infinite;
    }
</style>

<body>

<div id="regForm">
  <h1>UPLOAD DOCUMENTS</h1>
  <span>Please label your document before uploading, Only PDF and Scan document image will be accepted. <span style="color: red;">File above 1MB will not be accepted</span></span>
  <form role="form" action="/upload_documents?piid=<%= piid %>" method="POST" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">
    <div class="box-body">
      <div class="form-group fallback">
        <label for="exampleInputEmail1"></label>
        <input type="file" name="file" multiple required  id="exampleInputFile">
      </div>
  </form>


  
</div> <br> <br>

<div style="float: right; padding-bottom: px;">
  <a href="javascript:;" class="btn btn-success" id="" onclick="prev('<%= piid %>')" style="margin-bottom: 20;"  >Previous</a>
  <a href="javascript:;" class="btn btn-primary" id="" onclick="reviewapplication('<%= piid %>')" style="margin-bottom: 20;"  >Preview Application</a>
  <!-- /Application_feee?piid=<%= piid %> -->
</div>




  
 
   

   <!-- /.content-wrapper -->

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.7.1/basic.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.7.1/dropzone.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.7.1/dropzone.js"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
   <script src="/notify.js"></script>
   <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>



  // dropzone
  Dropzone.options.dropzoneform = {
    acceptedFiles: "image/*,application/pdf,.doc,.docx",
    init: function() {
      this.on("queuecomplete", function(file) {
        setTimeout(function(){
          location.reload()
        }, 2000)
      })
    }
  }
  
  /*
  * select category to get subcategory
  */
    
  
  </script>
   <script>
   function prev(id){
      location.assign('/application_2_2?piid='+id)
   }

    function reviewapplication(id){
    console.log(id)
    $('#cover-spin').show(0)
      $.ajax({
        url: "/chck_if_file_uploaded?id=" + id,
        method: "GET",
        success: function (response) {
          $('#cover-spin').hide(0)
          if(response > 1){
            $('#cover-spin').hide(0)
            Swal.fire({
             position: 'top-end',
             icon: 'success',
             title: 'Successfull',
             showConfirmButton: false,
             timer: 1500
           })
           .then(() => {
              location.assign('/review_application?piid='+id)
           })
          } else {
            $('#cover-spin').hide(0)
            Swal.fire({
              icon: 'error',
              title: 'Oops...',
              text: "You haven't uploaded any document",
            })
          }
          
        },
        error: function (xhr) {
          $('#cover-spin').hide(0)
          var err = JSON.parse(xhr.responseText);
          // alert(err.message);
          Swal.fire({
              icon: 'error',
              title: 'Oops...',
              text: err,
            })
        }
      })
      
   }
 </script>

 <script>
  let piid = '<%= piid %>'
  let form = document.querySelector('#reForm');
  form.addEventListener('submit', async(e)=> {
    e.preventDefault();
    let date = new Date();
    let month = date.getMonth();
    let year = date.getFullYear();
    let MIL = date.getMilliseconds();
    let SEC = date.getSeconds();
    let aplname = form.applicant_fullname.value;
      var matches = aplname.match(/\b(\w)/g); //['j', 's', 'o', 'n']
      var acronym = matches.join(""); //json
      var acronyml = acronym.toUpperCase();
    let proccessid = `REC/PLT/${acronyml}/${month}/${year}/${MIL}${SEC}`


  let pyl = {
    applicant_fullname : form.applicant_fullname.value,
    other_names : form.other_names.value,
    job_position : form.job_category1.value,
    job_position2 : form.job_category2.value,
    date_available_for_employment : form.date_available_for_employment.value,
    highest_education : form.highest_education.value,
    present_employment_detail : form.present_employment_detail.value,
    address_of_correspondence : form.address_of_correspondence.value,
    last_place_of_residence_outside_nigeria : form.last_place_of_residence_outside_nigeria.value,
    age_last_birthday : form.age_last_birthday.value,
    dob : form.dob.value,
    name_race_ethnicity_of_father : form.name_race_ethnicity_of_father.value,
    fathers_present_occupation : form.fathers_present_occupation.value,
    fathers_present_address : form.fathers_present_address.value,
    name_race_ethnicity_of_mother : form.name_race_ethnicity_of_mother.value,
    process_number: proccessid
  }
     console.log(pyl)
     try {
         const res = await fetch('/application?piid='+piid, {
             method: "POST",
             body: JSON.stringify(pyl),
             headers: {'Content-Type': 'application/json'}
         });

         const data = await res.json();
         console.log(data)

         if (data.err) {
             Swal.fire({
               icon: 'error',
               title: 'Oops...',
               text: data.err,
             })


         } else {
             let p = data.data
           Swal.fire({
             position: 'top-end',
             icon: 'success',
             title: 'Successfull',
             showConfirmButton: false,
             timer: 1500
           })
           .then(() => {
             location.assign(`/application_1_1?piid=`+p)
           })
           
         }
     } catch (error) {
       Swal.fire({
               icon: 'error',
               title: 'Oops...',
               text: error.message ,
               // footer: '<a href="">Why do I have this issue?</a>'
             })
     }
  })
 </script>

</body>

</html>